The ``matrix_divided`` doctest

Test Cases:
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
	>>> matrix_divided(None, None)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats
	>>> matrix_divided([[1, 2, 3, 4, 9, 10], [4, 8, 7, 9, 4],[3], [2]], 1.5)
	Traceback (most recent call last):
	...
	TypeError: Each row of the matrix must have the same size
	>>> matrix_divided([[10, 22, 53], [45, 6, 7]], 0)
	Traceback (most recent call last):
	...
	ZeroDivisionError: division by zero
	>>> matrix_divided([],3)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats
	>>> matrix_divided([["a" , 2, 4], [4, 5, 5]],8)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats
	>>> matrix_divided([["a" , 2, 4], {4, 5, 5}],8)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats
	>>> matrix_divided([[1, 2, 4], [4, 5, 5]],8)
	[[0.12, 0.25, 0.5], [0.5, 0.62, 0.62]]
	>>> matrix =  [[1, 2, 3], [4, 5, 6]]
	>>> print(matrix_divided(matrix, 3))
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
	>>> print(matrix)
	[[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided([[1, 2, 4], [4, 5, 6]], "string")
	Traceback (most recent call last):
	...
	TypeError: div must be a number
