The ``add_integer`` doctest

>>> add_integer = __import__('0-add_integer').add_integer

Test Cases:
	>>> print(add_integer(1, 2))
	3
	>>> print(add_integer(100, -2))
	98
	>>> print(add_integer(2))
	100
	>>> print(add_integer(100.3, -2))
	98
	>>> print(add_integer(4, "School"))
	Traceback (most recent call last):
	...
	TypeError: b must be an integer
	>>> print(add_integer(None))
	Traceback (most recent call last):
	...
	TypeError: a must be an integer
	>>> print(add_integer(10, True))
	Traceback (most recent call last):
	...
	TypeError: b must be an integer
	>>> print(add_integer(-2, 100.3))
	98
	>>> print(add_integer(1.7976931348623157e+308 * 2, 10))
	Traceback (most recent call last):
	...
	OverflowError: cannot convert float infinity to integer
	>>> print(add_integer(float("nan"), 10))
	Traceback (most recent call last):
	...
	ValueError: cannot convert float NaN to integer
